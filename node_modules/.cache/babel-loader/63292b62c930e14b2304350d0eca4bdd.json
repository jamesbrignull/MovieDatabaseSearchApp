{"ast":null,"code":"var _jsxFileName = \"/Users/JamesBrignull/Desktop/CODE/moviedatabaseapp/moviedatabaseapp/src/SearchMovie.js\";\nimport React, { useState } from 'react';\n\nconst SearchMovies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const searchDB = async e => {\n    e.preventDefault();\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=da6abdea97d375c2a6f00d22e7df9a7d&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: searchDB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    className: \"input\",\n    type: \"text\",\n    name: \"query\",\n    placeholder: \"Search Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Search!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, movies.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card--image\",\n    src: `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`,\n    alt: movie.title + ' poster',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card--content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }\n  }, \"RELEASE DATE: \", movie.release_date)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }\n  }, \"RATING: \", movie.vote_average)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card--desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"DESCRIPTION: \", movie.overview))))));\n};\n\nexport default SearchMovies;","map":{"version":3,"sources":["/Users/JamesBrignull/Desktop/CODE/moviedatabaseapp/moviedatabaseapp/src/SearchMovie.js"],"names":["React","useState","SearchMovies","query","setQuery","movies","setMovies","searchDB","e","preventDefault","url","response","fetch","data","json","results","err","console","error","target","value","filter","movie","poster_path","map","id","title","release_date","vote_average","overview"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst SearchMovies = () => {\n\n    const [query, setQuery] = useState('') \n    const [movies, setMovies] = useState([])\n\n    const searchDB = async (e) => {\n        e.preventDefault()\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=da6abdea97d375c2a6f00d22e7df9a7d&language=en-US&query=${query}&page=1&include_adult=false`\n\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            setMovies(data.results);\n        } catch(err) {\n            console.error(err)\n        }\n    }\n\n    return(\n        <div>\n            <form className='form' onSubmit={searchDB}>\n                <label className='label' htmlFor='query'>Movie Name</label>\n                <input \n                    value = {query}\n                    onChange = {(e) => setQuery(e.target.value)}\n                    className='input' \n                    type='text' \n                    name='query' \n                    placeholder='Search Movies'>\n                </input>\n                <button className='button' type='submit'>Search!</button>\n            </form>\n            <div className='card-list'>\n                {movies.filter(movie => movie.poster_path).map(movie => (\n                    <div key={movie.id} className='card'>\n                        <img className='card--image'\n                        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                        alt={movie.title + ' poster'}\n                        />\n                        <div className='card--content'>\n                            <h3 className='card--title'>{movie.title}</h3>\n                            <p><small>RELEASE DATE: {movie.release_date}</small></p>\n                            <p><small>RATING: {movie.vote_average}</small></p>\n                            <p className='card--desc'>DESCRIPTION: {movie.overview}</p>\n                        </div>\n                    </div>    \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchMovies"]},"metadata":{},"sourceType":"module"}